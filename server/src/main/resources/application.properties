spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=admin
#spring.datasource.password=admin
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create

spring.application.name=springboot-keycloak

spring.security.oauth2.client.registration.keycloak.client-id=springboot-keycloak-client
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=password
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, roles

#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/SpringBoot-Keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8081/realms/ticketingRealm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.oauth2-client-credentials.authorization-grant-type=password

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/SpringBoot-Keycloak
#spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/SpringBoot-Keycloak/protocol/openid-connect/token
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
#spring.security.oauth2.resourceserver.jwt.public-key-location=http://localhost:8080/realms/SpringBoot-Keycloak/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8081/realms/ticketingRealm/protocol/openid-connect/token
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/ticketingRealm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
#spring.security.oauth2.resourceserver.jwt.public-key-location=http://keycloak:8080/realms/ticketingRealm/protocol/openid-connect/certs

jwt.auth.converter.resource-id=springboot-keycloak-client
jwt.auth.converter.principal-attribute=preferred_username

#server.port=8081
server.port=8080
server.servlet.context-path=/API

#keycloak.auth-server-url=http://localhost:8080/realms/SpringBoot-Keycloak/protocol/openid-connect/auth
keycloak.auth-server-url=http://localhost:8081/realms/SpringBoot-Keycloak/protocol/openid-connect/auth
#keycloak.auth-server-url=http://keycloak:8080/realms/ticketingRealm/protocol/openid-connect/auth

spring.security.oauth2.client.registration.oauth2-client-credentials.client-id=auth-client
spring.security.oauth2.client.registration.oauth2-client-credentials.scope=openid, profile, roles
spring.security.oauth2.client.registration.oauth2-client-credentials.provider=keycloak

#keycloak.logout-uri=http://localhost:8080/realms/SpringBoot-Keycloak/protocol/openid-connect/logout
#keycloak.introspect-uri=http://localhost:8080/realms/SpringBoot-Keycloak/protocol/openid-connect/token/introspect
#keycloak.logout-uri=http://keycloak:8080/realms/ticketingRealm/protocol/openid-connect/logout
#keycloak.introspect-uri=http://keycloak:8080/realms/ticketingRealm/protocol/openid-connect/token/introspect
#keycloak.realm=SpringBoot-Keycloak
keycloak.realm=ticketingRealm
keycloak.resource=springboot-keycloak-client
keycloak.ssl-required=external
keycloak.public-client=true

logging.level.org.springframework.security=DEBUG